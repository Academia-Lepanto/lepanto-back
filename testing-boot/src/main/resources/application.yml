endpoints:
  api:
    enabled: true
logging:
  level:
    root: info
ontimize:
  corsfilter:
    enabled: true
  globalcors:
    cors-configurations:
      '[/**]':
        allowed-origins: "*"
        allowed-headers: "*"
        exposed-headers: [ "X-Auth-Token","Content-disposition","X-Requested-With" ]
        allowed-methods:
          - GET
          - POST
          - PUT
          - OPTIONS
          - DELETE
  jdbc:
    name-convention: lower
    sqlhandler: postgresql
    sql-condition-processor:
      uppper-string: true
      upper-like: true
  security:
    mode: default
    ignore-paths: /app/**
    role-information-service:
      role-repository: UserRoleDao
      role-name-column: rolename
      server-permission-query-id: serverPermissions
      server-permission-name-column: permission_name
      client-permission-query-id: clientPermissions
      client-permission-column: xmlclientpermission
    user-information-service:
      user-repository: UserDao
      user-login-column: username
      user-password-column: password
      query-id: login
      other-data:
        - name
        - surname
        - email
        - nif
        - userblocked
        - lastpasswordupdate
        - firstlogin
    user-role-information-service:
      user-role-repository: UserRoleDao
      query-id: userRole
      role-login-column: user_
      role-name-column: rolename
server:
  port: { $PORT:8080 }
  tomcat:
    uri-encoding: UTF-8
  compression:
    enabled: true
    mime-types: application/json, application/xml
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://ec2-18-203-205-71.eu-west-1.compute.amazonaws.com:5432/d2q16lg485haqd
      #    jdbc-url: jdbc:postgresql://ep-dark-wave-01024168.eu-central-1.aws.neon.tech:5432/lepantoacademy
      #    username: { $DATABASE_USERNAME }
    #    password: { $DATABASE_PASSWORD }
    username: kbnfklmaaipreh
    password: 887e2f1ea18e21405ef843bf968d1bbea94c37268103160c24700a28426121c0
    initial-size: 10
    test-on-borrow: true
  main:
    banner-mode: 'off'
  session:
    store-type: none
  autoconfigure:
    exclude: |
      org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration, org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.FallbackWebSecurityAutoConfiguration
